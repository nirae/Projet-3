<!DOCTYPE html>
<html>
<body>
    <div class="">
        {% for message in app.session.flashbag.get('notice') %}
        <p>
            Message flash : {{ message }}
        </p>
        {% endfor %}
    </div>
    Recap
    <div class="">
        Email : {{ order.email }}
    </div>
    <div class="">
        Numéro de commande : {{ order.orderNumber }}
    </div>

    {# test affichage #}
    {% for ticket in order.tickets %}
    <div class="">
        Prix du billet : {{ ticket.ticketPrice }}
    </div>
    {% endfor %}

    <div class="total">
        <p>Total :</p>
        <p id="total">{{ order.total }}</p>
    </div>

    <div class="">
        Jour de la visite : {{ dayVisit }}
    </div>

    <button type="button" id="bouton" name="StripeButton">Payer</button>

    <script src="https://checkout.stripe.com/checkout.js"></script>
    <script type="text/javascript">

    // Récupération du total
    var total = document.querySelector("#total").textContent;
    total = parseInt(total, 10);

    var handler = StripeCheckout.configure({
        key: 'pk_test_8V7h2SGMHr9hQQSl8AheEc8J',
        image: 'https://stripe.com/img/documentation/checkout/marketplace.png',
        locale: 'auto',
        token: function(token) {
            // You can access the token ID with `token.id`.
            // Get the token ID to your server-side code for use.
            var tokenValid = {
                id: token.id
            };
            ajaxPost('{{ url('recapitulatif') }}', tokenValid, function(reponse) {
                console.log("Token envoyé");
            });
        }
    });

    document.getElementById('bouton').addEventListener('click', function(e) {
        // Open Checkout with further options:
        handler.open({
            name: 'Musée du Louvre',
            description: 'Réservation',
            zipCode: true,
            currency: 'eur',
            amount: total * 100
        });
        e.preventDefault();
    });

    // Close Checkout on page navigation:
    window.addEventListener('popstate', function() {
        handler.close();
    });

    //Fonction Ajax
    // Exécute un appel AJAX POST
    // Prend en paramètres l'URL cible, la donnée à envoyer et la fonction callback appelée en cas de succès
    // Le paramètre isJson permet d'indiquer si l'envoi concerne des données JSON
    function ajaxPost(url, data, callback, isJson = true) {
        var req = new XMLHttpRequest();
        req.open("POST", url);
        req.addEventListener("load", function () {
            if (req.status >= 200 && req.status < 400) {
                // Appelle la fonction callback en lui passant la réponse de la requête
                callback(req.responseText);
            } else {
                console.error(req.status + " " + req.statusText + " " + url);
            }
        });
        req.addEventListener("error", function () {
            console.error("Erreur réseau avec l'URL " + url);
        });
        if (isJson) {
            // Définit le contenu de la requête comme étant du JSON
            req.setRequestHeader("Content-Type", "application/json");
            // Transforme la donnée du format JSON vers le format texte avant l'envoi
            data = JSON.stringify(data);
        }
        req.send(data);
    }
    </script>
</body>
</html>
